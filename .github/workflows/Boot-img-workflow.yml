name: Kernel Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KERNEL_REPO: https://github.com/BlissRoms-Devices/android_kernel_asus_sm8250
      CLANG_REPO: https://github.com/SA9990/proton-clang
      KERNEL_DIR: android_kernel_asus_sm8250
      CLANG_DIR: proton-clang
      DEFCONFIG: vendor/obiwan_defconfig
      ARCH: arm64
      CROSS_COMPILE: aarch64-linux-gnu-
      CROSS_COMPILE_ARM32: arm-linux-gnueabi-

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v2
        with:
          repository: ${{ env.KERNEL_REPO }}
          path: ${{ env.KERNEL_DIR }}

      - name: Checkout Proton Clang
        uses: actions/checkout@v2
        with:
          repository: ${{ env.CLANG_REPO }}
          path: ${{ env.CLANG_DIR }}

      - name: Set up Environment
        run: |
          export PATH="${{ env.CLANG_DIR }}/bin:$PATH"
          export CLANG_TRIPLE="aarch64-linux-gnu-"
          export CROSS_COMPILE="${{ env.CLANG_DIR }}/bin/${{ env.CROSS_COMPILE }}"
          export CROSS_COMPILE_ARM32="${{ env.CLANG_DIR }}/bin/${{ env.CROSS_COMPILE_ARM32 }}"

      - name: Build Kernel
        working-directory: ${{ env.KERNEL_DIR }}
        run: |
          make O=out ARCH=${{ env.ARCH }} ${{ env.DEFCONFIG }}
          make -j$(nproc) O=out ARCH=${{ env.ARCH }} \
          CC=clang \
          CLANG_TRIPLE=${{ env.CROSS_COMPILE }} \
          CROSS_COMPILE=${{ env.CROSS_COMPILE }} \
          CROSS_COMPILE_ARM32=${{ env.CROSS_COMPILE_ARM32 }}

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: Kernel
          path: ${{ env.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb
